<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Creative Flow - Your Final Design</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #a8b2ff 0%, #e2b0ff 100%);
        }
        .stage-container {
            display: none;
            min-height: 85vh;
            width: 100%;
        }
        .stage-container.active {
            display: flex;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px) scale(0.99); }
            to { opacity: 1; transform: translateY(0) scale(1); }
        }
        .fade-in {
            animation: fadeIn 0.6s ease-out forwards;
        }

        .prompt-card:hover {
            transform: translateY(-3px) scale(1.02);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
            border-color: rgba(99, 102, 241, 0.7);
        }
        
        .custom-scrollbar::-webkit-scrollbar { width: 8px; }
        .custom-scrollbar::-webkit-scrollbar-track { background: rgba(255, 255, 255, 0.1); border-radius: 4px; }
        .custom-scrollbar::-webkit-scrollbar-thumb { background: rgba(255, 255, 255, 0.4); border-radius: 4px; }
        .custom-scrollbar::-webkit-scrollbar-thumb:hover { background: rgba(255, 255, 255, 0.6); }
    </style>
</head>
<body class="text-slate-800 flex items-center justify-center min-h-screen p-4">

    <!-- Stage 1: The Anchor -->
    <div id="stage-anchor" class="stage-container active">
        <div class="w-full max-w-2xl m-auto bg-white/70 backdrop-blur-xl border border-white/50 rounded-2xl shadow-2xl p-8 sm:p-12 fade-in">
            <div class="text-center">
                <h1 class="text-5xl sm:text-6xl font-extrabold">The Anchor</h1>
                <p class="text-slate-600 mt-4 text-lg">Let's find our "North Star." A single, clear feeling ensures your message has a powerful, unmistakable core.</p>
                
                <div class="mt-10 text-left space-y-6">
                     <div>
                        <label for="recipient-name-input" class="block text-xl font-semibold">Who is this message for?</label>
                        <input type="text" id="recipient-name-input" class="mt-2 w-full p-4 border border-slate-300/70 bg-white/80 rounded-lg shadow-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition" placeholder="Enter their name...">
                    </div>
                    <div>
                        <label for="anchor-input" class="block text-xl font-semibold">What is the most important feeling you want them to have?</label>
                        <input type="text" id="anchor-input" class="mt-2 w-full p-4 border border-slate-300/70 bg-white/80 rounded-lg shadow-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition" placeholder="e.g., I want them to feel deeply appreciated.">
                    </div>
                </div>

                <button onclick="setAnchor()" class="mt-10 bg-indigo-600 text-white font-bold py-3 px-12 rounded-lg shadow-lg hover:bg-indigo-700 transition-all transform hover:scale-105">
                    Build the Palette
                </button>
            </div>
        </div>
    </div>

    <!-- Stage 2: The Palette -->
    <div id="stage-palette" class="stage-container">
        <div class="w-full max-w-5xl m-auto bg-white/70 backdrop-blur-xl border border-white/50 rounded-2xl shadow-2xl p-8 sm:p-12 fade-in">
            
            <div class="text-center mb-8">
                <h1 class="text-5xl sm:text-6xl font-extrabold">The Palette</h1>
                <p class="text-slate-600 mt-2 text-lg">Let's gather the raw, authentic material for your message. No pressure to be perfect, just be you.</p>
            </div>
            
            <div class="bg-white/60 p-6 rounded-lg border border-white/50 flex flex-col gap-8">
                <header class="border-b border-slate-300 pb-4">
                    <div class="flex justify-between items-center">
                        <div>
                             <h3 class="text-lg font-semibold text-slate-600 uppercase tracking-widest">Recipient</h3>
                             <p id="recipient-name-display" class="text-slate-800 font-bold text-2xl mt-1"></p>
                        </div>
                        <div>
                            <h3 class="text-lg font-semibold text-slate-600 uppercase tracking-widest text-right">Your Anchor</h3>
                            <p id="anchor-display" class="text-slate-800 font-bold text-2xl mt-1 text-right"></p>
                        </div>
                    </div>
                </header>
                
                <div class="w-full">
                    <h2 class="text-3xl font-bold mb-4 text-center">Inspiration Prompts</h2>
                    <div id="inspiration-prompts" class="grid grid-cols-2 md:grid-cols-3 gap-4">
                        <!-- Prompts will be added here by JS -->
                    </div>
                </div>

                <div class="w-full">
                    <h2 class="text-3xl font-bold mb-4 text-center">Your Ingredients</h2>
                    <div id="palette-canvas-container" class="bg-slate-100/70 p-4 rounded-lg border-2 border-dashed border-slate-300/80 min-h-[15rem]">
                        <div id="palette-canvas" class="custom-scrollbar h-80 overflow-y-auto space-y-3 pr-2">
                            <p id="palette-placeholder" class="text-slate-500 text-center mt-16">Your authentic thoughts will appear here.</p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="flex justify-center items-center gap-6 mt-8">
                <button onclick="goBack('anchor')" class="bg-slate-600 text-white font-bold py-3 px-12 rounded-lg shadow-lg hover:bg-slate-700 transition-all">Back</button>
                <button onclick="goToLoom()" class="bg-indigo-600 text-white font-bold py-3 px-12 rounded-lg shadow-lg hover:bg-indigo-700 transition-all transform hover:scale-105 disabled:bg-slate-400 disabled:text-white disabled:cursor-not-allowed" id="weave-button" disabled>
                    Go to the Loom
                </button>
            </div>
        </div>
    </div>

    <!-- Stage 3: The Loom -->
    <div id="stage-loom" class="stage-container">
        <div class="w-full max-w-6xl m-auto bg-white/70 backdrop-blur-xl border border-white/50 rounded-2xl shadow-2xl p-8 sm:p-12 fade-in">
             <div class="text-center mb-8">
                <h1 class="text-5xl sm:text-6xl font-extrabold">The Loom</h1>
                <p class="text-slate-600 mt-2 text-lg">Here, we weave your ingredients into a heartfelt message. You are the director of this process.</p>
            </div>

            <div class="bg-white/60 p-6 rounded-lg border border-white/50">
                <header class="border-b border-slate-300 pb-4 mb-6">
                     <div class="flex justify-between items-center">
                        <div>
                             <h3 class="text-lg font-semibold text-slate-600 uppercase tracking-widest">Recipient</h3>
                             <p id="recipient-name-display-loom" class="text-slate-800 font-bold text-2xl mt-1"></p>
                        </div>
                        <div>
                            <h3 class="text-lg font-semibold text-slate-600 uppercase tracking-widest text-right">Your Anchor</h3>
                            <p id="anchor-display-loom" class="text-slate-800 font-bold text-2xl mt-1 text-right"></p>
                        </div>
                    </div>
                </header>

                <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
                    <div class="lg:col-span-1 bg-slate-50/70 p-4 rounded-lg border border-slate-200">
                        <h2 class="text-2xl font-bold text-slate-800 mb-3 text-center">Your Ingredients</h2>
                        <div id="loom-ingredients" class="custom-scrollbar h-[32rem] overflow-y-auto space-y-3 pr-2">
                        </div>
                    </div>
                    <div class="lg:col-span-2 bg-slate-50/70 rounded-lg p-4 border border-slate-200">
                        <div class="flex justify-between items-center mb-4">
                            <h2 class="text-2xl font-bold text-slate-800">Your Message</h2>
                            <div class="flex space-x-2">
                                <button onclick="aiWeave()" class="bg-indigo-600 text-white text-sm font-semibold py-2 px-4 rounded-lg hover:bg-indigo-700 transition shadow">Weaver</button>
                                <button onclick="aiStitch()" class="bg-teal-500 text-white text-sm font-semibold py-2 px-4 rounded-lg hover:bg-teal-600 transition shadow">Stitcher</button>
                            </div>
                        </div>
                        <textarea id="loom-editor" class="w-full h-[30rem] p-4 bg-white border border-slate-300 rounded-lg shadow-inner focus:ring-2 focus:ring-indigo-500 transition text-slate-900" placeholder="Drag ingredients here, or write freely..."></textarea>
                    </div>
                </div>
             </div>
             <div class="flex justify-center items-center gap-6 mt-8">
                 <button onclick="goBack('palette')" class="bg-slate-600 text-white font-bold py-3 px-8 rounded-lg shadow-lg hover:bg-slate-700 transition-all">Back</button>
                 <button onclick="startOver()" class="bg-pink-600 text-white font-bold py-3 px-8 rounded-lg shadow-lg hover:bg-pink-700 transition-transform transform hover:scale-105">
                    Start Over
                </button>
            </div>
        </div>
    </div>

    <!-- Modal for Idea Input -->
    <div id="palette-modal" class="fixed inset-0 bg-black/50 backdrop-blur-md hidden items-center justify-center p-4 z-50">
        <div class="bg-white border border-slate-200 rounded-xl shadow-2xl p-8 w-full max-w-lg text-slate-800 fade-in">
            <h3 id="modal-prompt-text" class="text-2xl font-bold mb-4"></h3>
            <textarea id="modal-textarea" class="w-full h-40 p-4 bg-slate-50 border border-slate-300 rounded-lg shadow-sm focus:ring-2 focus:ring-indigo-500 transition" placeholder="Let your thoughts flow freely..."></textarea>
            <div class="mt-6 flex justify-end space-x-4">
                <button onclick="closeModal()" class="bg-slate-200 font-bold py-2 px-6 rounded-lg hover:bg-slate-300 transition">Cancel</button>
                <button onclick="addIngredient()" class="bg-indigo-600 text-white font-bold py-2 px-6 rounded-lg hover:bg-indigo-700 transition">Add Ingredient</button>
            </div>
        </div>
    </div>


    <script>
        // --- State Management ---
        let recipientName = '';
        let userAnchor = '';
        let paletteIngredients = [];
        let currentPrompt = '';

        const inspirationPrompts = [
            { id: 'memory', text: 'A specific memory...' },
            { id: 'quality', text: 'A quality you admire...' },
            { id: 'hope', text: 'A hope for their future...' },
            { id: 'laugh', text: 'A time they made you laugh...' },
            { id: 'overcome', text: 'A challenge they overcame...' },
            { id: 'learned', text: 'Something they taught you...' },
            { id: 'grateful', text: 'A small thing you\'re grateful for...' },
            { id: 'inside_joke', text: 'An inside joke...' },
            { id: 'quirk', text: 'A loveable quirk...' },
            { id: 'dream', text: 'A shared dream or goal...' },
            { id: 'proud', text: 'A moment you felt proud...' },
            { id: 'miss', text: 'Something you miss...' }
        ];

        // --- DOM Elements ---
        const stages = {
            anchor: document.getElementById('stage-anchor'),
            palette: document.getElementById('stage-palette'),
            loom: document.getElementById('stage-loom')
        };
        const recipientNameInput = document.getElementById('recipient-name-input');
        const recipientNameDisplay = document.getElementById('recipient-name-display');
        const recipientNameDisplayLoom = document.getElementById('recipient-name-display-loom');
        const anchorDisplay = document.getElementById('anchor-display');
        const anchorDisplayLoom = document.getElementById('anchor-display-loom');
        const anchorInput = document.getElementById('anchor-input');
        const paletteCanvas = document.getElementById('palette-canvas');
        const palettePlaceholder = document.getElementById('palette-placeholder');
        const weaveButton = document.getElementById('weave-button');
        const modal = document.getElementById('palette-modal');
        const modalPromptText = document.getElementById('modal-prompt-text');
        const modalTextarea = document.getElementById('modal-textarea');
        const loomIngredientsContainer = document.getElementById('loom-ingredients');
        const loomEditor = document.getElementById('loom-editor');
        const promptsContainer = document.getElementById('inspiration-prompts');

        // --- Initialization ---
        window.onload = () => {
            renderPrompts();
            stages.anchor.classList.add('active');
        };

        function renderPrompts() {
            promptsContainer.innerHTML = '';
            inspirationPrompts.forEach(prompt => {
                const button = document.createElement('button');
                button.className = 'prompt-card h-24 flex items-center justify-center text-center p-3 bg-white/70 rounded-lg shadow-lg hover:shadow-indigo-500/20 border border-slate-200/80 transition-all';
                button.innerHTML = `<span class="font-semibold text-slate-700">${prompt.text}</span>`;
                button.onclick = () => openModal(prompt);
                promptsContainer.appendChild(button);
            });
        }
        
        // --- Stage Navigation ---
        function switchStage(stageName) {
            Object.values(stages).forEach(stage => stage.classList.remove('active'));
            if (stages[stageName]) {
                stages[stageName].classList.add('active');
            }
        }
        
        function goBack(stageName) {
            switchStage(stageName);
        }

        function setAnchor() {
            const nameValue = recipientNameInput.value.trim();
            const anchorValue = anchorInput.value.trim();
            if (anchorValue && nameValue) {
                userAnchor = anchorValue;
                recipientName = nameValue;

                recipientNameDisplay.textContent = recipientName;
                recipientNameDisplayLoom.textContent = recipientName;
                anchorDisplay.textContent = userAnchor;
                anchorDisplayLoom.textContent = userAnchor;

                switchStage('palette');
            }
        }
        
        function goToLoom() {
            if (paletteIngredients.length > 0) {
                renderLoomIngredients();
                switchStage('loom');
            }
        }

        // --- Palette Stage Logic ---
        function openModal(prompt) {
            currentPrompt = prompt;
            modalPromptText.textContent = prompt.text;
            modal.classList.add('flex');
            modal.classList.remove('hidden');
            modalTextarea.value = '';
            modalTextarea.focus();
        }

        function closeModal() {
            modal.classList.add('hidden');
            modal.classList.remove('flex');
        }

        function addIngredient() {
            const content = modalTextarea.value.trim();
            if (content) {
                const newIngredient = {
                    id: `ing-${Date.now()}`,
                    prompt: currentPrompt.text,
                    content: content
                };
                paletteIngredients.push(newIngredient);
                renderPalette();
                closeModal();
            }
        }

        function renderPalette() {
            paletteCanvas.innerHTML = '';
            if (paletteIngredients.length === 0) {
                paletteCanvas.innerHTML = '<p id="palette-placeholder" class="text-slate-500 text-center mt-16">Your authentic thoughts will appear here.</p>';
            } else {
                paletteIngredients.forEach(ing => {
                    const card = document.createElement('div');
                    card.className = 'bg-white p-3 rounded-lg shadow-sm border border-slate-200';
                    card.innerHTML = `<p class="font-semibold text-indigo-700 text-sm">${ing.prompt}</p><p class="text-slate-700 mt-1">${ing.content}</p>`;
                    paletteCanvas.appendChild(card);
                });
            }
            weaveButton.disabled = paletteIngredients.length === 0;
        }

        // --- Loom Stage Logic ---
        function renderLoomIngredients() {
            loomIngredientsContainer.innerHTML = '';
            paletteIngredients.forEach(ing => {
                const card = document.createElement('div');
                card.id = ing.id;
                card.className = 'ingredient-card-loom bg-white p-3 rounded-lg shadow-md border border-slate-200 cursor-grab active:cursor-grabbing';
                card.innerHTML = `<p class="font-bold text-indigo-700 text-sm">${ing.prompt}</p><p class="text-slate-700 mt-1">${ing.content}</p>`;
                
                card.setAttribute('draggable', true);
                card.addEventListener('dragstart', (e) => {
                    e.dataTransfer.setData('text/plain', ing.content);
                    e.target.style.opacity = '0.5';
                });
                card.addEventListener('dragend', (e) => { e.target.style.opacity = '1'; });
                
                loomIngredientsContainer.appendChild(card);
            });

            loomEditor.addEventListener('dragover', (e) => { e.preventDefault(); loomEditor.classList.add('ring-2', 'ring-indigo-400'); });
            loomEditor.addEventListener('dragleave', (e) => { loomEditor.classList.remove('ring-2', 'ring-indigo-400'); });
            loomEditor.addEventListener('drop', (e) => {
                e.preventDefault();
                loomEditor.classList.remove('ring-2', 'ring-indigo-400');
                const text = e.dataTransfer.getData('text/plain');
                insertTextAtCursor(loomEditor, `\n${text}\n`);
            });
        }

        function insertTextAtCursor(el, text) {
            const start = el.selectionStart;
            el.value = el.value.substring(0, start) + text + el.value.substring(start);
            el.selectionStart = el.selectionEnd = start + text.length;
            el.focus();
        }

        // --- AI Simulation Functions using Original Wording ---
        function aiWeave() {
            if (paletteIngredients.length < 2) {
                loomEditor.value = "The Weaver needs at least two ingredients to help you draft a message.";
                return;
            }
            let draft = `Based on your anchor to help ${recipientName} feel "${userAnchor.replace('I want them to feel ','').toLowerCase()}", here is a draft:\n\n`;
            draft += `Dear ${recipientName},\n\nI was thinking about you today and wanted to reach out. I was smiling, remembering that time when ${paletteIngredients[0].content.toLowerCase()}. It always makes me think of what a wonderful quality you have, how you are so ${paletteIngredients[1].content.toLowerCase()}.\n\n`;
            if(paletteIngredients.length > 2) {
                 draft += `And it's not just the big things, either. I so admire ${paletteIngredients[2].content.toLowerCase()}.\n\n`;
            }
            draft += "Just wanted to send some love your way and let you know you're on my mind.";
            loomEditor.value = draft;
        }

        function aiStitch() {
            const currentText = loomEditor.value;
            if (currentText.trim().length < 20) {
                loomEditor.value = "The Stitcher needs some of your own writing to help polish it.";
                return;
            }
            let sentences = currentText.split('. ');
            let polishedText = sentences.map(s => s.trim()).filter(s => s.length > 0).map(s => s.charAt(0).toUpperCase() + s.slice(1)).join('. ');
             if (!polishedText.endsWith('.')) { polishedText += '.'; }
            polishedText += `\n\nThinking of you, ${recipientName}.`;
            loomEditor.value = polishedText;
        }
        
        function startOver() {
             recipientName = '';
             userAnchor = '';
             paletteIngredients = [];
             recipientNameInput.value = '';
             anchorInput.value = '';
             renderPalette();
             loomEditor.value = '';
             switchStage('anchor');
        }

    </script>
</body>
</html>
